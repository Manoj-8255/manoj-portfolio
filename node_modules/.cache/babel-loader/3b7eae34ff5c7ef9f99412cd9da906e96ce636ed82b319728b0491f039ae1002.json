{"ast":null,"code":"var _jsxFileName = \"/Users/manoj/Documents/devtinder/src/context/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [isDark, setIsDark] = useState(true);\n  useEffect(() => {\n    // Check for saved theme preference or default to dark\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setIsDark(savedTheme === 'dark');\n    } else {\n      // Default to dark theme\n      setIsDark(true);\n    }\n  }, []);\n  useEffect(() => {\n    // Save theme preference to localStorage\n    localStorage.setItem('theme', isDark ? 'dark' : 'light');\n\n    // Update document body class for global theme\n    document.body.className = isDark ? 'dark-theme' : 'light-theme';\n  }, [isDark]);\n  const toggleTheme = () => {\n    setIsDark(!isDark);\n  };\n  const value = {\n    isDark,\n    toggleTheme,\n    theme: isDark ? 'dark' : 'light'\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"R3DRuBM+pja0a5A+eJI6MSmg/LA=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","context","Error","ThemeProvider","children","_s2","isDark","setIsDark","savedTheme","localStorage","getItem","setItem","document","body","className","toggleTheme","value","theme","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/manoj/Documents/devtinder/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(true);\n\n  useEffect(() => {\n    // Check for saved theme preference or default to dark\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setIsDark(savedTheme === 'dark');\n    } else {\n      // Default to dark theme\n      setIsDark(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    // Save theme preference to localStorage\n    localStorage.setItem('theme', isDark ? 'dark' : 'light');\n    \n    // Update document body class for global theme\n    document.body.className = isDark ? 'dark-theme' : 'light-theme';\n  }, [isDark]);\n\n  const toggleTheme = () => {\n    setIsDark(!isDark);\n  };\n\n  const value = {\n    isDark,\n    toggleTheme,\n    theme: isDark ? 'dark' : 'light'\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGR,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,EAAE;MACdD,SAAS,CAACC,UAAU,KAAK,MAAM,CAAC;IAClC,CAAC,MAAM;MACL;MACAD,SAAS,CAAC,IAAI,CAAC;IACjB;EACF,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd;IACAc,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEL,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC;;IAExD;IACAM,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGR,MAAM,GAAG,YAAY,GAAG,aAAa;EACjE,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBR,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMU,KAAK,GAAG;IACZV,MAAM;IACNS,WAAW;IACXE,KAAK,EAAEX,MAAM,GAAG,MAAM,GAAG;EAC3B,CAAC;EAED,oBACET,OAAA,CAACC,YAAY,CAACoB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAZ,QAAA,EACjCA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACjB,GAAA,CArCWF,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}